message << "MSH|^~\\&||ABCHS||AUSDHSV|20070103112951||ADT^A08^ADT_A01|12334456778893|P|2.5|||NE|NE|AU|ASCII"
message << "EVN|A08|20060705000000"
message << "PID|1||0000112234^^1&2&3^100^A||XXXXXXXXXX^^^^^^S~YYYY^^A&B&C^^^^F||10131113|1||4|^^RICHMOND^^3121||||1201||||||||1100|||||||||AAA"
message << "PV1|1|O|^^^^^1|||||||2|||||1||||654345509^^^100^A|1|||||||||||||||||||||||||200607050000||||||V"
message << "PV2|||||||1||||||||||||||||^^^^^^^^^103"
message << "ROL|1|AD|SAHCP|XXXXXXXXXX^^^^^^S|||||6|1"
message << "PR1|1||1||20060705|1"
message << "GT1|1||||||||||||||||||||NOT APPLICABLE"

println "message:\n"+message
println "message.PID:\n"+message.PID
println "message.PID(5):\n"+message.PID(5)
println "message.PID[1](5):\n"+message.PID[1](5)
println "message.PID[1](5)(1):\n"+message.PID[1](5)(1)
println "message.PID(5)[2]:\n"+message.PID(5)[2]
assert(message.PID(5)[2].toString().equals("YYYY^^A&B&C^^^^F"))
println "message.PID(5)[2](3):\n"+message.PID(5)[2](3)
assert(message.PID(5)[2](3).toString().equals("A&B&C"))
println "message.PID(5)[2](3)(2):\n"+message.PID(5)[2](3)(2)
assert(message.PID(5)[2](3)(2).toString().equals("B"))